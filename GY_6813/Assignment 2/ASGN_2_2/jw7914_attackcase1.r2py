#Attack Case 1 - Testing if creating default removes all closed files

# Clean up if the files exist
if "default" in listfiles():
  removefile("default")
if "testfile.txt" in listfiles():
    removefile("testfile.txt")
if "testfile1.txt" in listfiles():
    removefile("testfile1.txt")
if "testfile2.txt" in listfiles():
    removefile("testfile2.txt")
if "testfile.3txt" in listfiles():
    removefile("testfile3.txt")

myfile1 = openfile("testfile1.txt", True)
myfile2 = openfile("testfile2.txt", True)
myfile3 = openfile("testfile3.txt", True)
myfile1.close()
myfile2.close()
myfile3.close()

default = openfile("default", True)
if "testfile1.txt" in listfiles():
    log("testfile1.txt still exists - Testcase 1\n")
if "testfile2.txt" in listfiles():
    log("testfile2.txt still exists - Testcase 1\n")
if "testfile3.txt" in listfiles():
    log("testfile3.txt still exists - Testcase 1\n")

# Initial write to default
default.writeat("TEMPLATE", 0)

# Close default
default.close()

# Open a file that doesn't exist
myfile = openfile("testfile.txt", False)

# Read from the file. 
# Passing None as first argument indicates that we want to read the whole file from offset 0.
assert myfile.readat(None, 0) == "TEMPLATE"

# Close the file
myfile.close()